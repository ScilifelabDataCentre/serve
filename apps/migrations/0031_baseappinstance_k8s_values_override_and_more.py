# Generated by Django 5.1.1 on 2025-06-02 20:02

import django.db.models.deletion
import tagulous.models.fields
import tagulous.models.models
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("apps", "0030_alter_baseappinstance_k8s_user_app_status"),
        ("portal", "0002_eventsobject"),
    ]

    operations = [
        migrations.AddField(
            model_name="baseappinstance",
            name="k8s_values_override",
            field=models.JSONField(
                blank=True,
                help_text="Override k8s values for this app instance.This follows general logic of k8s values: if this field is set, then first k8s_values is used, then k8s_values_override. ",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="baseappinstance",
            name="k8s_values",
            field=models.JSONField(
                blank=True,
                help_text="k8s values for this app instance. It's not possible to change this field directly as it's set automatically on model save. In order to change it, use k8s_values_override.",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="k8suserappstatus",
            name="status",
            field=models.CharField(
                choices=[
                    ("CrashLoopBackOff", "CrashLoopBackOff"),
                    ("ContainerCreating", "ContainerCreating"),
                    ("PodInitializing", "PodInitializing"),
                    ("ErrImagePull", "ErrImagePull"),
                    ("ImagePullBackOff", "ImagePullBackOff"),
                    ("PostStartHookError", "PostStartHookError"),
                    ("Unknown", "Unknown"),
                    ("Running", "Running"),
                    ("Deleted", "Deleted"),
                ],
                max_length=20,
                null=True,
            ),
        ),
        migrations.CreateModel(
            name="Tagulous_DepictioInstance_tags",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=255, unique=True)),
                ("slug", models.SlugField()),
                (
                    "count",
                    models.IntegerField(default=0, help_text="Internal counter of how many times this tag is in use"),
                ),
                (
                    "protected",
                    models.BooleanField(default=False, help_text="Will not be deleted when the count reaches 0"),
                ),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
                "unique_together": {("slug",)},
            },
            bases=(tagulous.models.models.BaseTagModel, models.Model),
        ),
        migrations.CreateModel(
            name="DepictioInstance",
            fields=[
                (
                    "baseappinstance_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="apps.baseappinstance",
                    ),
                ),
                ("note_on_linkonly_privacy", models.TextField(blank=True, default="", null=True)),
                ("source_code_url", models.URLField(blank=True, null=True)),
                ("description", models.TextField(blank=True, default="", null=True)),
                ("access", models.CharField(choices=[("public", "Public")], default="public", max_length=20)),
                ("collections", models.ManyToManyField(blank=True, related_name="%(class)s", to="portal.collection")),
                (
                    "tags",
                    tagulous.models.fields.TagField(
                        _set_tag_meta=True,
                        blank=True,
                        force_lowercase=True,
                        help_text="Add keywords to help categorize your app",
                        to="apps.tagulous_depictioinstance_tags",
                    ),
                ),
            ],
            options={
                "verbose_name": "Depictio App Instance",
                "verbose_name_plural": "Depictio App Instances",
                "permissions": [("can_access_app", "Can access app service")],
            },
            bases=("apps.baseappinstance", models.Model),
        ),
    ]
