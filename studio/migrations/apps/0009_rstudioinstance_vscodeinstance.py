# Generated by Django 5.0.2 on 2024-05-13 11:27

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("apps", "0008_alter_appcategories_options_alter_apps_options_and_more"),
        ("projects", "0003_remove_environment_appenv_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="RStudioInstance",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("chart", models.CharField(max_length=512)),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("deleted_on", models.DateTimeField(blank=True, null=True)),
                ("info", models.JSONField(blank=True, null=True)),
                ("name", models.CharField(default="app_name", max_length=512)),
                ("k8s_values", models.JSONField(blank=True, null=True)),
                ("url", models.URLField(blank=True, null=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                (
                    "access",
                    models.CharField(
                        choices=[("project", "Project"), ("private", "Private")], default="private", max_length=20
                    ),
                ),
                (
                    "app",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_related",
                        to="apps.apps",
                    ),
                ),
                (
                    "app_status",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="%(class)s",
                        to="apps.appstatus",
                    ),
                ),
                (
                    "flavor",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="%(class)s",
                        to="projects.flavor",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="%(class)s", to="projects.project"
                    ),
                ),
                (
                    "subdomain",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, related_name="%(class)s", to="apps.subdomain"
                    ),
                ),
                ("volume", models.ManyToManyField(blank=True, to="apps.volumeinstance")),
            ],
            options={
                "verbose_name": "RStudio Instance",
                "verbose_name_plural": "RStudio Instances",
                "permissions": [("can_access_app", "Can access app service")],
            },
        ),
        migrations.CreateModel(
            name="VSCodeInstance",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("chart", models.CharField(max_length=512)),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("deleted_on", models.DateTimeField(blank=True, null=True)),
                ("info", models.JSONField(blank=True, null=True)),
                ("name", models.CharField(default="app_name", max_length=512)),
                ("k8s_values", models.JSONField(blank=True, null=True)),
                ("url", models.URLField(blank=True, null=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                (
                    "access",
                    models.CharField(
                        choices=[("project", "Project"), ("private", "Private")], default="private", max_length=20
                    ),
                ),
                (
                    "app",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_related",
                        to="apps.apps",
                    ),
                ),
                (
                    "app_status",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="%(class)s",
                        to="apps.appstatus",
                    ),
                ),
                (
                    "flavor",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="%(class)s",
                        to="projects.flavor",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="%(class)s", to="projects.project"
                    ),
                ),
                (
                    "subdomain",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, related_name="%(class)s", to="apps.subdomain"
                    ),
                ),
                ("volume", models.ManyToManyField(blank=True, to="apps.volumeinstance")),
            ],
            options={
                "verbose_name": "VS Code Instance",
                "verbose_name_plural": "VS Code Instances",
                "permissions": [("can_access_app", "Can access app service")],
            },
        ),
    ]
