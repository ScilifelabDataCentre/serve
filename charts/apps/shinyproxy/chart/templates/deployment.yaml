apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appname }}
  namespace: {{ .Values.namespace }}
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      release: {{ .Release.Name }}
      app: shinyproxy-deployment
      project: {{ .Values.project.slug }}
      type: app
      pod: serve
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        # prometheus.io/port: "8501"
      labels:
        release: {{ .Release.Name }}
        app: shinyproxy-deployment
        project: {{ .Values.project.slug }}
        networking/allow-internet-egress: "true"
        networking/allow-egress-to-studio-web: "true"
        allow-api-access: "true"
        type: app
        pod: serve
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
    {{ if index .Values.flavor.limits "nvidia.com/gpu" }}
      affinity:
        {{ .Values.affinity | toYaml | nindent 8 | trim }}
    {{ end }}
      serviceAccountName: {{ .Values.namespace }}-shinyproxy
      containers:
      - name: serve
        image: {{ .Values.appconfig.proxyimage }}
        ports:
          - containerPort: {{ .Values.appconfig.proxyport }}
        volumeMounts:
          - name: application-conf-{{ .Release.Name }}
            mountPath: /opt/shinyproxy/config
        imagePullPolicy: IfNotPresent
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        resources:
          limits:
            cpu: 300m
            memory: 800Mi
          requests:
            cpu: 200m
            memory: 512Mi
        readinessProbe:
          tcpSocket:
            port: {{ .Values.appconfig.proxyport }}
          initialDelaySeconds: 60
          periodSeconds: 15
      volumes:
      - name: application-conf-{{ .Release.Name }}
        configMap:
          name: {{ .Release.Name }}-shinyproxy-configmap
      dnsPolicy: ClusterFirst
