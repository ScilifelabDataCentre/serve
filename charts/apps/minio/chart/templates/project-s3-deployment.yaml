apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-minio
  namespace: {{ .Values.namespace }}
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      release: {{ .Release.Name }}
      app: minio
      project: {{ .Values.project.slug }}
      type: app
      pod: minio
  template:
    metadata:
      labels:
        release: {{ .Release.Name }}
        app: minio
        project: {{ .Values.project.slug }}
        networking/allow-internet-egress: "false"
        type: app
        pod: minio
    spec:
      automountServiceAccountToken: false
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: {{ .Release.Name }}-minio
        image: {{ .Values.appconfig.image }}
        imagePullPolicy: IfNotPresent
        env:
        - name: MINIO_ROOT_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-minio
              key: accesskey
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-minio
              key: secretkey
        securityContext:
        {{- toYaml .Values.securityContext | nindent 10 }}
        ports:
          - containerPort: {{ .Values.appconfig.apiServerPort }} 
            name: api-server
          - containerPort: {{ .Values.appconfig.uiConsolePort }}
            name: ui-console
        resources: {}
        volumeMounts:
        {{- range $key, $value := .Values.apps.volumeK8s }}
        - name: {{ $key }}
          mountPath: bitnami/minio/data
        {{- end }}

      - name: {{ .Release.Name }}-minio-sidecar
        image: alpine:3.18.3
        imagePullPolicy: IfNotPresent
        command: ["sh", "-c", "while true; do sleep 3600; done;"]
        securityContext:
        {{- toYaml .Values.securityContext | nindent 10 }}
        resources: {}
        volumeMounts:
        {{- range $key, $value := .Values.apps.volumeK8s }}
        - name: {{ $key }}
          mountPath: /data
        {{- end }}

      hostname: {{ .Release.Name }}-minio
      restartPolicy: Always
      volumes:
      {{- range $key, $value := .Values.apps.volumeK8s }}
      - name: {{ $key }}
        persistentVolumeClaim:
          claimName: {{ $value.release }}
      {{- end }}
status: {}