apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: {{ .Release.Name }}-registry
  name: {{ .Release.Name }}
  namespace: {{ .Values.namespace }}
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: docker-registry
      release: {{ .Release.Name }}
      project: {{ .Values.project.slug }}
      type: app
      pod: docker-registry
  template:
    metadata:
      labels:
        app: docker-registry
        release: {{ .Release.Name }}
        project: {{ .Values.project.slug }}
        networking/allow-internet-egress: "false"
        networking/allow-internet-ingress: "true"
        type: app
        pod: docker-registry
    spec:
      automountServiceAccountToken: false
      initContainers:
      - image: alpine:latest
        imagePullPolicy: IfNotPresent
        name: init-auth
        command: ["/bin/sh"]
        args: ["-c", "apk add apache2-utils && htpasswd -Bbn {{ .Values.credentials.username }} {{ .Values.credentials.password }} > /auth/htpasswd"]
        volumeMounts:
        - name: auth-vol
          mountPath: /auth
      containers:
      - name: reverse-proxy
        image: nginx:alpine
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: rp-conf
          mountPath: /etc/nginx
      - image:  joxit/docker-registry-ui:latest
        name: registry-ui
        env:
        - name: "SINGLE_REGISTRY"
          value: "true"
        - name: "NGINX_PROXY_PASS_URL"
          value: "http://{{ .Release.Name }}:5000"
        - name: "REGISTRY_TITLE"
          value: "Studio"
        - name: "NGINX_PROXY_HEADER_Authorization"
          value: "Basic {{ tpl ("{{ .Values.credentials.username }}:{{ .Values.credentials.password }}") . | b64enc }}"
      - image: registry:2
        name: registry
        env:
        - name: "REGISTRY_AUTH"
          value: "htpasswd"
        - name: "REGISTRY_AUTH_HTPASSWD_REALM"
          value: "Registry Realm"
        - name: "REGISTRY_AUTH_HTPASSWD_PATH"
          value: /auth/htpasswd
        - name: "REGISTRY_HTTP_SECRET"
          value: "{{ .Release.Name }}"
        ports:
        - containerPort: 5000
        resources: {}
        volumeMounts:
        - name: auth-vol
          mountPath: /auth
        {{- range $key, $value := .Values.apps.volumeK8s }}
        - name: {{ $key }}
          mountPath: /var/lib/registry
        {{- end }}

      hostname: {{ .Release.Name }}
      restartPolicy: Always
      volumes:
      - name: auth-vol
        emptyDir: {}
      - name: rp-conf
        configMap:
          name: {{ .Release.Name }}-registry
      {{- range $key, $value := .Values.apps.volumeK8s }}
      - name: {{ $key }}
        persistentVolumeClaim:
          claimName: {{ $value.release }}
      {{- end }}
status: {}
