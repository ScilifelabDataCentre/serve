apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appname }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      release: {{ .Release.Name }}
      app: {{ .Values.appname }}
      project: {{ .Values.project.slug }}
      type: app
      pod: {{ .Values.appname }}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "8501"
      labels:
        release: {{ $.Release.Name }}
        app: {{ .Values.appname }}
        project: {{ $.Values.project.slug }}
        networking/allow-internet-egress: "true"
        networking/allow-egress-to-studio-web: "true"
        type: app
        pod: {{ .Values.appname }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      automountServiceAccountToken: false
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
      - name: rp-conf
        configMap:
          name: {{ .Release.Name }}-rp-config
      {{ if .Values.apps.volumeK8s }}
      {{- range $key, $value := .Values.apps.volumeK8s }}
      - name: model-vol
        persistentVolumeClaim:
          claimName: {{ $value.release }}
      {{- end }}
      {{- end }}
      containers:
      - name: reverse-proxy
        image: nginx:alpine
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: rp-conf
          mountPath: /etc/nginx
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi

      - name: serve
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        resources:
          {{- toYaml .Values.flavor | nindent 10 }}
        volumeMounts:
          - name: model-vol
            mountPath: /home/user/models
        env:
        - name: GUNICORN_CMD_ARGS
          value: "--limit-request-field_size 0"
          {{- with .Values.extraEnv }}
          {{- tpl . $ | nindent 10 }}
          {{- end }}
        - name: PYTHONPATH
          value: "/home/user/models"
        - name: STACKN_MODEL_PATH
          value: "/home/user/models"
        image: {{ .Values.environment.repository }}/{{ .Values.environment.image }}
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: {{ .Values.appconfig.port }}
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
